using System;
using System.Collections.Generic;
using Roblox;
using Roblox.Caching;
using Roblox.Common;
using Roblox.Data.Interfaces;

namespace ~NAMESPACE~
{
    ~ACCESSIBILITY~ class ~BIZCLASSNAME~ : IRobloxEntity<~IDTYPE~, ~DALCLASSNAME~> ~BIZREMOTECACHEABLE~
    {
        private ~DALCLASSNAME~ _EntityDAL;

        ~BIZPROPERTIES~

        public ~BIZCLASSNAME~()
        {
            _EntityDAL = new ~DALCLASSNAME~();
        }
        
		~ACCESSIBILITY~ void Delete()
        {
            EntityHelper.DeleteEntity(
                this,
                _EntityDAL.Delete
            );
        }
        ~ACCESSIBILITY~ void Save()
        {
            EntityHelper.SaveEntity(
                this,
                () =>
                {
                    _EntityDAL.Created = DateTime.Now;
                    _EntityDAL.Updated = _EntityDAL.Created;
                    _EntityDAL.Insert();
                },
                () =>
                {
                    _EntityDAL.Updated = DateTime.Now;
                    _EntityDAL.Update();
                }
            );
        }
        
        private static ~BIZCLASSNAME~ CreateNew(~CREATENEWPARAMS~)
        {
            var entity = new ~BIZCLASSNAME~();
            ~CREATENEWPROPERTYSETTERS~
            entity.Save();

            return entity;
        }

        ~PARAMFUNCTIONS~

        public void Construct(~DALCLASSNAME~ dal)
        {
            _EntityDAL = dal;
        }

        public CacheInfo CacheInfo
        {
            get { return EntityCacheInfo; }
        }

        public static CacheInfo EntityCacheInfo = new CacheInfo(
            new CacheabilitySettings(collectionsAreCacheable: true, countsAreCacheable: true, entityIsCacheable: true, idLookupsAreCacheable: true),
            typeof(~BIZCLASSNAME~).ToString(),
            true
        );

        public IEnumerable<string> BuildEntityIDLookups()
        {
            yield break;
        }

        public IEnumerable<StateToken> BuildStateTokenCollection()
        {
        ~STATETOKENCOLLECTION~
            yield break;
        }

        ~BIZREMOTECACHEABLEREGION~
    }
}